<Page
    x:Class="Demo.Microsofts.SymbolsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:model="using:Demo.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:local="using:Demo.Microsofts"
    xmlns:wuxdata="using:Windows.UI.Xaml.Data"
    xmlns:lc="using:Leisn.UI.Xaml.Controls"
    xmlns:myc="using:Demo.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>

        <CollectionViewSource x:Name="itemCVS" IsSourceGrouped="True" 
                              Source="{x:Bind viewModel.Groups}" ItemsPath="Items"/>

        <Style x:Key="itemContainerStyle" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource GridViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,4,4"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="70"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <GridViewItemPresenter x:Name="Root" 
                                               CheckBrush="{ThemeResource GridViewItemCheckBrush}" 
                                               ContentMargin="{TemplateBinding Padding}"  ContentTransitions="{TemplateBinding ContentTransitions}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                                               DragBackground="{ThemeResource GridViewItemDragBackground}" 
                                               DragForeground="{ThemeResource GridViewItemDragForeground}" 
                                               FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                                               FocusVisualMargin="{TemplateBinding FocusVisualMargin}" 
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                               Control.IsTemplateFocusTarget="True"
                                               PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}"
                                               PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}"
                                               SelectedForeground="White"
                                               SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}"
                                               SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}" 
                                               SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </GridViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="GridViewHeaderItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />
            <Setter Property="Background" Value="{ThemeResource GridViewHeaderItemBackground}" />
            <Setter Property="Margin" Value="0,0,0,4" />
            <Setter Property="Padding" Value="12,8,12,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewHeaderItem">
                        <StackPanel Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    HorizontalAlignment="Stretch">
                            <ContentPresenter x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Rectangle Stroke="{ThemeResource GridViewHeaderItemDividerStroke}"
                                       StrokeThickness="0.5" Height="1"  
                                       VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
                                       Margin="12,8,12,5" />
                        </StackPanel>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="symbolTemplate" x:DataType="Symbol">
            <Grid HorizontalAlignment="Stretch">
                <StackPanel Padding="5" ToolTipService.ToolTip="{Binding Text,ElementName=textBox}">
                    <SymbolIcon Symbol="{x:Bind}" HorizontalAlignment="Center"/>
                    <TextBlock x:Name="textBox"  Margin="0,5,0,0" Style="{ThemeResource CaptionTextBlockStyle}"
                           Text="{x:Bind}" TextWrapping="Wrap" HorizontalAlignment="Center" HorizontalTextAlignment="Center"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="suggestTemplate" x:DataType="Symbol">
            <StackPanel Padding="5,3" Orientation="Horizontal" >
                <SymbolIcon Symbol="{x:Bind}" VerticalAlignment="Center"/>
                <TextBlock x:Name="textBox"  Margin="12,0,0,0" 
                                       Style="{ThemeResource CaptionTextBlockStyle}"
                                       Text="{x:Bind}" TextWrapping="Wrap" 
                                       VerticalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="stringSuggestTemplate" x:DataType="x:String">
            <Grid HorizontalAlignment="Stretch">
                <StackPanel Padding="5,3" Orientation="Horizontal" >
                    <Rectangle Width="16" Height="16"/>
                    <TextBlock  Margin="12,0,0,0" Text="{x:Bind}" 
                                       Style="{ThemeResource CaptionTextBlockStyle}"
                                       VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <local:SuggestItemTemplateSelector x:Name="suggestSelector"
                                           StringItemTemplate="{StaticResource stringSuggestTemplate}"
                                           SymbolItemTemplate="{StaticResource suggestTemplate}"/>
    </Page.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Margin="20,0,0,1" Orientation="Horizontal">
                <AutoSuggestBox Visibility="{Binding ElementName=semanticZoom,Path=IsZoomedInViewActive}"
                        Width="256"  PlaceholderText="Search"
                        HorizontalAlignment="Left" 
                        ItemsSource="{x:Bind viewModel.Filters}"
                        ItemTemplateSelector="{StaticResource suggestSelector}"
                        Background="{ThemeResource AppBarBackgroundThemeBrush}"
                        QueryIcon="Find" QuerySubmitted="AutoSuggestBox_QuerySubmitted"
                        TextChanged="AutoSuggestBox_TextChanged" 
                        SuggestionChosen="AutoSuggestBox_SuggestionChosen"/>
                <ToggleButton Content="Aa" CornerRadius="0" Margin="15,0,0,0" 
                              ToolTipService.ToolTip="Match Case"
                              IsChecked="{x:Bind viewModel.MatchCase,Mode=TwoWay}"/>
                <ToggleButton Content="Abc" CornerRadius="0" Margin="15,0,0,0" 
                              ToolTipService.ToolTip="Match Order"
                              IsChecked="{x:Bind viewModel.MatchOrder,Mode=TwoWay}"/>
            </StackPanel>

            <SemanticZoom x:Name="semanticZoom" Grid.Row="1">
                <SemanticZoom.ZoomedInView>
                    <GridView x:Name="gridView"
                          ItemContainerStyle="{StaticResource itemContainerStyle}" 
                          ItemsSource="{x:Bind itemCVS.View}"
                          Margin="12,0" IsItemClickEnabled="False"
                          SelectionMode="Single"
                          SelectionChanged="gridView_SelectionChanged"
                          ScrollViewer.HorizontalScrollBarVisibility="auto"
                          ScrollViewer.HorizontalScrollMode="Enabled"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollMode="Disabled"
                  ItemTemplate="{StaticResource symbolTemplate}">
                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsWrapGrid/>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.GroupStyle>
                            <GroupStyle HidesIfEmpty="True"/>
                        </GridView.GroupStyle>
                    </GridView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <lc:HiveView x:Name="hiveView" Padding="10,10,20,10" Width="300"
                      ItemsSource="{x:Bind itemCVS.View.CollectionGroups}"
                                 HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <lc:HiveView.ItemTemplate>
                            <DataTemplate x:DataType="wuxdata:ICollectionViewGroup">
                                <Border>
                                    <TextBlock Text="{x:Bind ((model:ItemsGroup)Group).Title}"/>
                                </Border>
                            </DataTemplate>
                        </lc:HiveView.ItemTemplate>
                        <lc:HiveView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <lc:HivePanel FixedEdge="30" />
                            </ItemsPanelTemplate>
                        </lc:HiveView.ItemsPanel>
                    </lc:HiveView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </Grid>

        <controls:InAppNotification x:Name="notification" ShowDismissButton="False"
                                    AnimationDuration="0:00:0.100"
                                    CornerRadius="5" Padding="12,4"
                                    Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                                    BorderThickness="2" HorizontalOffset="-200" VerticalOffset="0" 
                                    VerticalAlignment="Top" HorizontalAlignment="Center">
            <controls:InAppNotification.RenderTransform>
                <TranslateTransform Y="-25"/>
            </controls:InAppNotification.RenderTransform>
            <StackPanel Orientation="Horizontal">
                <myc:CheckedIndicator IsActive="True" VerticalAlignment="Center"
                                      Foreground="{ThemeResource SystemAccentColorDark3}"/>
                <TextBlock Text="Copied." Margin="10,0,0,0" VerticalAlignment="Center"
                           FontSize="13" FontWeight="SemiBold"/>
            </StackPanel>
        </controls:InAppNotification>

        <ProgressRing IsActive="{x:Bind viewModel.IsBusy}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
</Page>
